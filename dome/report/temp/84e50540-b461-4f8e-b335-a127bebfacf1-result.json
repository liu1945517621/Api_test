{"name": "test_login01[params0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x0000019FB2A833B0>\nparams = {'baseInfo': {'api_name': '用户登录', 'header': {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token...'}, 'method': 'post', 'url': '/dar/user/login'}, 'testCase': [{'data': {'passwd': 'admin123', 'user_name': 'test01'}}]}\n\n    @allure.story('登录正常模块')\n    @pytest.mark.parametrize('params', get_testcase_yaml(FILE_PATH['LOGIN']))\n    def test_login01(self, params):\n>       RequestBase().specification_yaml(params)\n\ntestcase\\login\\test_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\apiutil.py:107: in specification_yaml\n    assert_res.assert_result(validation, res_json, res.status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <dome.common.assertions.Assertions object at 0x0000019FB28A6CC0>\nexpected = [{'contains': {'status_code': 400}}, {'eq': {'msg': '登录成功'}}]\nresponse = {'error_code': None, 'msg': '登录成功', 'msg_code': 200, 'orgId': '6140913758128971280', ...}\nstatus_code = 200\n\n    def assert_result(self, expected, response, status_code):\n        \"\"\"\n        断言，通过断言all_flag标记，all_flag==0表示测试通过，否则为失败\n        :param expected: 预期结果\n        :param response: 实际响应结果\n        :param status_code: 响应code码\n        :return:\n        \"\"\"\n        all_flag = 0\n        try:\n            # logs.info(\"yaml文件预期结果：%s\" % expected)\n            for yq in expected:\n                for key, value in yq.items():\n                    if key == \"contains\":\n                        flag = self.contains_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == \"eq\":\n                        flag = self.equal_assert(value, response)\n                        all_flag = all_flag + flag\n                    elif key == 'ne':\n                        flag = self.not_equal_assert(value, response)\n                        all_flag = all_flag + flag\n                    else:\n                        logs.error(\"不支持此种断言方式\")\n    \n        except Exception as exceptions:\n            logs.error('接口断言异常，请检查yaml预期结果值是否正确填写!')\n            raise exceptions\n    \n        if all_flag == 0:\n            logs.info(\"测试成功\")\n            assert True\n        else:\n            logs.error(\"测试失败\")\n>           assert False\n                   ^^^^^\nE           AssertionError\n\ncommon\\assertions.py:141: AssertionError"}, "attachments": [{"name": "接口地址:http://127.0.0.1:8787/dar/user/login", "source": "dc583d58-8e78-47d7-818d-35b44126fcb3-attachment.attach"}, {"name": "接口名称:用户登录", "source": "17c03881-7976-4a67-aa57-32e4907b7214-attachment.attach"}, {"name": "请求方式:post", "source": "46f1eb29-11b2-4040-9de4-a85726e28b3c-attachment.attach"}, {"name": "请求头:{'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '${get_extract_data(cookie,session)}'}", "source": "5be7ca60-9e2a-494c-8a30-15afeee66714-attachment.txt", "type": "text/plain"}, {"name": "用例名称:用户名和密码正确登录验证", "source": "f36374ad-1c31-4770-a2e6-9348e0e6268f-attachment.attach"}, {"name": "请求参数: {\"data\": {\"user_name\": \"test01\", \"passwd\": \"admin123\"}}", "source": "dd2dc39f-945a-451d-bff6-76a17c447695-attachment.txt", "type": "text/plain"}, {"name": "响应结果: 200", "source": "f70622c3-6391-402d-8882-0910208c6bc3-attachment.txt", "type": "text/plain"}, {"name": "响应代码断言结果:失败", "source": "fb53122b-4cd3-4c2c-a01c-954d9cefc027-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "78806e32-b2d9-4452-b1ae-54d0e10622fa-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "b1484ae2-6d67-4dd0-814e-f3e7a350ec19-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "params", "value": "{'baseInfo': {'api_name': '用户登录', 'url': '/dar/user/login', 'method': 'post', 'header': {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '${get_extract_data(cookie,session)}'}}, 'testCase': [{'case_name': '用户名和密码正确登录验证', 'data': {'user_name': 'test01', 'passwd': 'admin123'}, 'validation': [{'contains': {'status_code': 400}}, {'eq': {'msg': '登录成功'}}], 'extract': {'token': '\"token\": \"(.*?)\"'}}]}"}], "start": 1754391641762, "stop": 1754391641784, "uuid": "a721e60d-0621-4353-b71e-9538fb4e2b88", "historyId": "595f3e63376dcf43bb790cb8f80ed279", "testCaseId": "a07987be517002d87cad64b15b681947", "fullName": "testcase.login.test_login.TestLogin#test_login01", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "story", "value": "登录正常模块"}, {"name": "parentSuite", "value": "testcase.login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-UUFDR4F"}, {"name": "thread", "value": "44636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.login.test_login"}], "titlePath": ["testcase", "login", "test_login.py", "TestLogin"]}